{"version":3,"sources":["webpack:///./src/app/matiere/matiere.module.ts","webpack:///./src/app/matiere/matiere.route.ts","webpack:///./src/app/matiere/matiere/matiere.component.css","webpack:///./src/app/matiere/matiere/matiere.component.html","webpack:///./src/app/matiere/matiere/matiere.component.ts","webpack:///./src/app/matiere/shared/components/aff-ressource/aff-ressource.component.css","webpack:///./src/app/matiere/shared/components/aff-ressource/aff-ressource.component.html","webpack:///./src/app/matiere/shared/components/aff-ressource/aff-ressource.component.ts","webpack:///./src/app/matiere/shared/components/ressources/ressources.component.css","webpack:///./src/app/matiere/shared/components/ressources/ressources.component.html","webpack:///./src/app/matiere/shared/components/ressources/ressources.component.ts","webpack:///./src/app/matiere/shared/pipes/safe.pipe.ts","webpack:///./src/app/matiere/shared/services/matiere.service.ts","webpack:///./src/app/matiere/shared/store/ressource.effect.ts","webpack:///./src/app/matiere/shared/store/ressource.selectors.ts"],"names":[],"mappings":"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","file":"app-matiere-matiere-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { MatiereComponent } from './matiere/matiere.component';\nimport { RouterModule } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RessourceReducer } from './shared/store/ressource.reducers';\nimport { RessourceEffects } from './shared/store/ressource.effect';\nimport { MATIERE_ROUTES } from './matiere.route';;\nimport { FormsModule } from '@angular/forms';\nimport { RessourcesComponent } from './shared/components/ressources/ressources.component';\nimport { AffRessourceComponent } from './shared/components/aff-ressource/aff-ressource.component';\nimport { SafePipe } from './shared/pipes/safe.pipe';\nimport { CoreModule } from '../shared/modules/core.module';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    RouterModule.forChild(MATIERE_ROUTES), \n    StoreModule.forFeature('matiere', RessourceReducer),\n    EffectsModule.forFeature([RessourceEffects]),\n    FormsModule\n  ],\n  declarations: [\n    MatiereComponent,\n    RessourcesComponent, \n    AffRessourceComponent, \n    SafePipe\n  ]\n})\nexport class MatiereModule { }\n","import { Component } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { MatiereComponent } from './matiere/matiere.component';\nimport { RessourcesComponent } from './shared/components/ressources/ressources.component';\nimport { AffRessourceComponent } from './shared/components/aff-ressource/aff-ressource.component';\n\n\n// Routes marche avec un s à la fin ou simplement un tableau \nexport const MATIERE_ROUTES : Routes = [\n    { path: '', component: MatiereComponent, children : [\n        {path: 'ressources', component: RessourcesComponent},\n        {path: 'affRessource', component: AffRessourceComponent}\n    ] },\n   \n]","module.exports = \".btn-ajout{\\n    padding: 0px;\\n    width: 100%;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\"","module.exports = \"<div class=\\\"container container-white\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-sm-4 pt-2\\\">\\n      <app-modal-ajout *ngIf=\\\"possedeDroit('Ajouter')\\\" class=\\\"btn\\\" [idReason]=\\\"'ajoutRessource'\\\" [title]=\\\"'Ajouter un type de ressoure ?' \\\" (pickedEvent)=\\\"addTypeRessource($event)\\\"></app-modal-ajout>\\n      <app-liste-clickable [listePick]=\\\"ressourceType$\\\" [args]=\\\"['name']\\\" [id]=\\\"'idTypeRessource'\\\" (pickedEvent)=\\\"pickTypeRessource($event)\\\"></app-liste-clickable>\\n    </div>\\n\\n    <div class=\\\"col-12 col-sm-8\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../../shared/store';\nimport { FetchInitTypeRessourceSuccess, \n  FetchInitTypeRessource, \n  SetRessourceSelected, \n  SetTypeRessource, \n  AjoutTypeRessource} from '../shared/store/ressource.actions';\nimport { ressourceTypeSelector } from '../shared/store/ressource.selectors';\nimport { Observable } from 'rxjs';\nimport { typeRessource } from '../shared/models/typeRessource.model';\nimport { Router } from '@angular/router';\nimport { getMatiereSelectedSelector, getDroitsSpeSelectedSelector } from '../../search/shared/store/search.selectors';\nimport { searchPossibility } from '../../search/shared/models/searchPossibility.model';\nimport { Droit } from '../../monitoring/shared/models/droit.model';\nimport { FetchDroit } from '../../search/shared/store/search.actions';\n\n@Component({\n  selector: 'app-matiere',\n  templateUrl: './matiere.component.html',\n  styleUrls: ['./matiere.component.css'],\n})\nexport class MatiereComponent implements OnInit {\n  public ressourceType$: Observable<typeRessource[]>;\n  public matiere : searchPossibility;\n  public droitsUser$ : Observable<Droit[]>;\n  public droitUser : Droit[];\n\n  public currentState: string ='shown';\n  \n  constructor(\n    private store : Store<State>,\n    private router: Router\n  ) {\n    this.ressourceType$ = this.store.pipe(select(ressourceTypeSelector));\n    let matiere$ = this.store.pipe(select(getMatiereSelectedSelector));\n    matiere$.subscribe(val => this.matiere = val);\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new FetchInitTypeRessource());\n\n    this.droitsUser$ = this.store.pipe(select(getDroitsSpeSelectedSelector));\n    this.droitsUser$.subscribe( (droits : Droit[]) => {\n      this.droitUser = droits;\n    })\n    \n     // Récupération des droits du user sur cette spécialité\n     this.store.dispatch(new FetchDroit());\n  }\n  \n  public pickTypeRessource(ressource: typeRessource) {\n    this.store.dispatch(new SetTypeRessource(ressource));\n    this.router.navigateByUrl('/matiere/ressources');\n    \n  }\n\n public addTypeRessource(nomTypeRessource : string) {\n  this.store.dispatch(new AjoutTypeRessource(\n    {idTypeRessource : -1, \n    name : nomTypeRessource, \n    idMatiere : this.matiere.id }))\n }\n\n // Vérifie que l'utilisateur a bien les droits pour ajouter\n public possedeDroit(nomDroit : string) : boolean {\n  let possedeDroit = false;\n  if (this.droitUser) {\n    this.droitUser.forEach((droit : Droit) => {\n      if ( droit.intitule == nomDroit ) {\n        possedeDroit = droit.estAcquis;\n      }\n  });\n  }\n \n\n  return possedeDroit;\n}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h2>{{ressource.nom}}</h2>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\" *ngFor=\\\"let file of ressourceFile$ | async \\\">\\n      <span>{{file.name}}</span>\\n      <i *ngIf=\\\"possedeDroit('Supprimer')\\\" class=\\\"material-icons float-right\\\" (click)=\\\"deleteFile(file)\\\" style=\\\"color :red\\\">\\n        delete\\n      </i>\\n      <object [data]='(\\\"/api/file/downloadFile/\\\" + file.link) | safe' type=\\\"application/pdf\\\" width=\\\"100%\\\" height=\\\"400px\\\" class=\\\"mt-3\\\">\\n        <p>Alternative text - include a link\\n          <a href=\\\"myfile.pdf\\\">to the PDF!</a>\\n        </p>\\n      </object>\\n    </div>\\n  </div>\\n</div>\\n\\n<input type=\\\"file\\\" (change)=fileEvent($event)>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../../../../shared/store';\nimport { ressourceSelectedSelector, ressourceFileSelector } from '../../store/ressource.selectors';\nimport { ressource } from '../../models/ressource.model';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatiereService } from '../../services/matiere.service';\nimport { UploadFile, FetchRessourceFile, DeleteFile } from '../../store/ressource.actions';\nimport { RessourceFile } from '../../models/ressourceFile.model';\nimport { Router } from '@angular/router';\nimport { Droit } from '../../../../monitoring/shared/models/droit.model';\nimport { getDroitsSpeSelectedSelector } from '../../../../search/shared/store/search.selectors';\nimport { FetchDroit } from '../../../../monitoring/shared/store/monitoring.actions';\n\n@Component({\n  selector: 'app-aff-ressource',\n  templateUrl: './aff-ressource.component.html',\n  styleUrls: ['./aff-ressource.component.css']\n})\nexport class AffRessourceComponent implements OnInit {\n  public ressource$: Observable<ressource>;\n  public ressource : ressource;\n  public ressourceFile$: Observable<RessourceFile[]>;\n  public ressourceFile : RessourceFile[];\n\n  public droitUser : Droit[];\n\n  constructor(\n    public store : Store<State>,\n    public sanitizer: DomSanitizer,\n    public matiereService : MatiereService,\n    private router : Router\n  ) {\n    this.ressource$ = this.store.pipe(select(ressourceSelectedSelector));\n    this.ressourceFile$ = this.store.pipe(select(ressourceFileSelector));\n   }\n\n  ngOnInit() {\n    this.ressource$.subscribe(res => {\n      this.ressource = res;\n\n      // Get all links for ressources\n      this.store.dispatch(new FetchRessourceFile(res.idRessource));\n    });\n\n    this.ressourceFile$.subscribe( val => {\n      this.ressourceFile = val;\n    });\n\n    this.store.pipe(select(getDroitsSpeSelectedSelector)).subscribe( (droits : Droit[]) => {\n      this.droitUser = droits;\n    })\n\n     // Récupération des droits du user sur cette spécialité\n   this.store.dispatch(new FetchDroit());\n \n  }\n\n\n  public fileEvent($event) {\n    let fileSelected: File = $event.target.files[0];\n    this.store.dispatch(new UploadFile({file : fileSelected, idRessource : this.ressource.idRessource}));\n    this.router.navigateByUrl('/matiere/ressources');\n  }\n\n  public getSafeUrl(url : string) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n  public deleteFile(file : RessourceFile) {\n    this.store.dispatch(new DeleteFile(file));\n    this.router.navigateByUrl('/matiere/ressources');\n  }\n\n   // Vérifie que l'utilisateur a bien les droits pour ajouter\n public possedeDroit(nomDroit : string) : boolean {\n  let possedeDroit = false;\n  if (this.droitUser) {\n    this.droitUser.forEach((droit : Droit) => {\n      if ( droit.intitule == nomDroit ) {\n        possedeDroit = droit.estAcquis;\n      }\n  });\n  }\n\n  return possedeDroit;\n}\n\n  \n\n}\n","module.exports = \"\"","module.exports = \"<h1>{{typeRessourceSelected.name}}</h1>\\n\\n<app-liste-clickable [listePick]=\\\"ressources$\\\" [args]=\\\"['nom']\\\" [id]=\\\"'idRessource'\\\" (pickedEvent)=\\\"pickRessource($event)\\\"></app-liste-clickable>\\n\\n<app-modal-ajout *ngIf=\\\"possedeDroit('Ajouter')\\\" [idReason]=\\\"'AjoutTypeRessource'\\\" [title]=\\\"'Ajouter : ' + typeRessourceSelected?.name + ' ?' \\\" (pickedEvent)=\\\"addRessource($event)\\\"></app-modal-ajout>\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { State } from '../../../../shared/store';\nimport { Observable } from 'rxjs';\nimport { ressource } from '../../models/ressource.model';\nimport { ressourceSelector, ressourceTypeSelectedSelector } from '../../store/ressource.selectors';\nimport { FetchRessource, SetRessourceSelected, AjoutRessource } from '../../store/ressource.actions';\nimport { log } from 'util';\nimport { Router } from '@angular/router';\nimport { typeRessource } from '../../models/typeRessource.model';\nimport { Input } from '@angular/core';\nimport { Droit } from '../../../../monitoring/shared/models/droit.model';\nimport { FetchDroit } from '../../../../search/shared/store/search.actions';\nimport { getDroitsSpeSelectedSelector } from '../../../../search/shared/store/search.selectors';\n\n@Component({\n  selector: 'app-ressources',\n  templateUrl: './ressources.component.html',\n  styleUrls: ['./ressources.component.css']\n})\nexport class RessourcesComponent implements OnInit {\n  public ressources$: Observable<ressource[]>;\n  public typeRessourceSelected$ : Observable<typeRessource>;\n  public typeRessourceSelected : typeRessource;\n\n  public droitUser : Droit[];\n\n  constructor(private store : Store<State>,\n  public router : Router) {\n    this.ressources$ = this.store.pipe(select(ressourceSelector));\n    this.typeRessourceSelected$ = this.store.pipe(select(ressourceTypeSelectedSelector));\n   }\n\n  ngOnInit() {\n\n    this.store.dispatch(new FetchRessource());\n    this.typeRessourceSelected$.subscribe( (val : typeRessource) => {\n      this.typeRessourceSelected = val;\n    });\n\n    this.store.pipe(select(getDroitsSpeSelectedSelector)).subscribe( (droits : Droit[]) => {\n      this.droitUser = droits;\n    })\n\n     // Récupération des droits du user sur cette spécialité\n   this.store.dispatch(new FetchDroit());\n    \n  }\n\n  public pickRessource (choix : ressource) {\n    this.store.dispatch(new SetRessourceSelected(choix));\n    this.router.navigateByUrl('/matiere/affRessource');\n  }\n\n  public ajoutTypeRessource() {\n    document.getElementById(\"openModalButton3\").click();\n  }\n\n  public addRessource(nomRessource : string) {\n    this.store.dispatch(new AjoutRessource(\n      {idRessource : -1, \n      nom : nomRessource, \n      idTypeRessource : this.typeRessourceSelected.idTypeRessource }));\n \n  }\n\n  // Vérifie que l'utilisateur a bien les droits pour ajouter\n  public possedeDroit(nomDroit : string) : boolean {\n    let possedeDroit = false;\n    if (this.droitUser) {\n      this.droitUser.forEach((droit : Droit) => {\n        if ( droit.intitule == nomDroit ) {\n          possedeDroit = droit.estAcquis;\n        }\n    });\n    }\n\n    return possedeDroit;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { typeRessource } from '../models/typeRessource.model';\nimport { searchPossibility } from '../../../search/shared/models/searchPossibility.model';\nimport { ressource } from '../models/ressource.model';\nimport { HttpParams } from '@angular/common/http';\nimport { UploadFile } from '../store/ressource.actions';\nimport { UploadFileRessource } from '../models/uploadFileRessource.model';\nimport { RessourceFile } from '../models/ressourceFile.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatiereService {\n    \n  constructor(public http : HttpClient) {};\n    \n  \n  public getTypeRessourceFromMatiere(matiereSelected: searchPossibility): Observable<typeRessource[]> {\n    return this.http.post<typeRessource[]>(\"/api/matiere/getTypeRessourceFromMatiere\", matiereSelected).pipe(\n      map ((sPos : any) => {\n          return sPos.map(r => ({idTypeRessource : r.idTypeRessource, name : r.name, idMatiere : r.idMatiere}));\n        })\n      );\n  }\n\n  public getRessourceFromTypeRessource(ressourceTypeSelected: typeRessource): any {\n    return this.http.get<typeRessource[]>(\"/api/matiere/getRessourceFromTypeRessource/\" + ressourceTypeSelected.idTypeRessource).pipe(\n      map ((sPos : any) => {\n          return sPos.map(r => ({idRessource : r.idRessource, \n            lienPdf : r.lienPdf, \n            nom : r.nom, \n            idTypeRessource :r.idTypeRessource}));\n        })\n      );\n  }\n\n\n  public addRessource(ressource: ressource): any {\n    return this.http.post<typeRessource[]>(\"/api/matiere/addRessource\", ressource);\n  }\n\n\n  public addTypeRessource(typeRessource: typeRessource): any {\n    return this.http.post<typeRessource[]>(\"/api/matiere/addTypeRessource\", typeRessource);\n  }\n\n  public uploadFile(file: UploadFileRessource) :any {\n    const _formData = new FormData();\n    _formData.append('file', file.file, file.file.name);\n    _formData.append('idRessource', JSON.stringify(file.idRessource));\n    _formData.append('type', \"pdf\");\n    return this.http.post<any>('/api/file/addFile',  _formData);\n  }\n\n  public downloadFile(idFile : number) {\n    return this.http.get('/api/file/downloadFile/' + idFile, {responseType: 'text'});\n  }\n\n  // Get all ressources File of a ressource\n  public downloadRessourceFile(idRessource: number): Observable<RessourceFile[]> {\n    return this.http.get<RessourceFile[]>('/api/file/downloadFilesRessource/' + idRessource).pipe(\n      map ((sPos : any) => {\n          return sPos.map(r => ({type : r.type, \n            link : r.idFile, \n            idRessource : r.idRessource,\n            name : r.name\n          }));\n        })\n      );;\n  }\n\n  public deleteFile( linkFile : string): Observable<any> {\n    return this.http.delete<any>('/api/file/deleteFile/' + linkFile);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Action, Store, select} from  \"@ngrx/store\";\nimport { State } from \"../../../shared/store\";\nimport { switchMap, tap, debounceTime, map } from \"rxjs/operators\";\nimport { ofType, Effect, Actions } from \"@ngrx/effects\";\nimport { FETCH_INIT_TYPE_RESSOURCE, FetchInitTypeRessourceSuccess, FETCH_RESSOURCE, FetchRessource, FetchRessourceSuccess, ADD_RESSOURCE, AjoutRessource, ADD_TYPE_RESSOURCE, AjoutTypeRessource, FetchInitTypeRessource, UPLOAD_FILE, UploadFile, FETCH_RESSOURCE_FILE, FetchRessourceFile, FetchRessourceFileSuccess, DELETE_FILE, DeleteFile } from \"./ressource.actions\";\nimport { typeRessource } from \"../models/typeRessource.model\";\nimport { MatiereService } from \"../services/matiere.service\";\nimport { getMatiereSelectedSelector } from \"../../../search/shared/store/search.selectors\";\nimport { searchPossibility } from \"../../../search/shared/models/searchPossibility.model\";\nimport { ressourceSelectedSelector, ressourceTypeSelectedSelector } from \"./ressource.selectors\";\nimport { ressource } from \"../models/ressource.model\";\nimport { UploadFileRessource } from \"../models/uploadFileRessource.model\";\nimport { RessourceFile } from \"../models/ressourceFile.model\";\n\n\n@Injectable()\nexport class RessourceEffects {\n\n    @Effect()\n    initRessourceType$ = this.action$.pipe(\n        ofType(FETCH_INIT_TYPE_RESSOURCE),\n        switchMap(() => {\n            return this.store.pipe(select(getMatiereSelectedSelector));\n        }), \n        switchMap ((matiereSelected : searchPossibility) => {\n            return this.matiereService.getTypeRessourceFromMatiere(matiereSelected);\n        }),\n        map( (response: typeRessource[]) => {\n            return new FetchInitTypeRessourceSuccess(response);\n        })\n    )\n\n    @Effect()\n    fetchRessources$ = this.action$.pipe(\n        ofType(FETCH_RESSOURCE),\n        switchMap(() => {\n            return this.store.pipe(select(ressourceTypeSelectedSelector));\n        }), \n        switchMap ((ressourceTypeSelected : typeRessource) => {\n            return this.matiereService.getRessourceFromTypeRessource(ressourceTypeSelected);\n        }),\n        map( (response: ressource[]) => {\n            return new FetchRessourceSuccess(response);\n        })\n    )\n\n    @Effect()\n    ajoutRessource$ = this.action$.pipe(\n        ofType(ADD_RESSOURCE), \n        switchMap ((action : AjoutRessource)=> {\n            return this.matiereService.addRessource(action.payload);\n        }),\n        map( (response: ressource[]) => {\n            return new FetchRessource();\n        })\n    )\n\n    @Effect()\n    ajoutTypeRessource$ = this.action$.pipe(\n        ofType(ADD_TYPE_RESSOURCE), \n        switchMap ((action : AjoutTypeRessource)=> {\n            return this.matiereService.addTypeRessource(action.payload);\n        }),\n        map( (response: ressource[]) => {\n            return new FetchInitTypeRessource();\n        })\n    )\n\n    @Effect({dispatch : false})\n    uploadFile$ = this.action$.pipe(\n        ofType(UPLOAD_FILE), \n        switchMap ((action : UploadFile)=> {\n            return this.matiereService.uploadFile(action.payload);\n        }), \n        map ( (response :any ) => {\n            return null;\n        })\n    )\n\n    @Effect()\n    fetchRessourceFile$ = this.action$.pipe(\n        ofType(FETCH_RESSOURCE_FILE), \n        switchMap ((action : FetchRessourceFile) => {\n            return this.matiereService.downloadRessourceFile(action.payload);\n        }),\n        map( (response: RessourceFile[]) => {\n            return new FetchRessourceFileSuccess(response);\n        })\n    )\n\n    @Effect()\n    deleteFile$ = this.action$.pipe(\n        ofType(DELETE_FILE), \n        switchMap ((action : DeleteFile) => {\n            return this.matiereService.deleteFile(action.payload.link);\n        }),\n        map( (response: RessourceFile[]) => {\n            return new FetchRessourceFileSuccess(response);\n        })\n    )\n\n    constructor (private action$: Actions, \n        private store: Store<State>,\n        private matiereService: MatiereService) {}\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { RessourceState } from './ressource.reducers';\n\nexport const matiereSelector = createFeatureSelector('matiere');\n\nexport const ressourceSelectedSelector = createSelector(matiereSelector, (searchState : RessourceState) => {\n    if (searchState) {\n        return searchState.ressourceSelected;\n    } else {\n        return null;\n    }\n});\n\nexport const ressourceTypeSelectedSelector = createSelector(matiereSelector, (searchState: RessourceState) => {\n    if (searchState) {\n        return searchState.typeRessourceSelected;\n    } else {\n        return null;\n    }\n})\n\nexport const ressourceTypeSelector = createSelector(matiereSelector, (searchState: RessourceState) => {\n    if (searchState) {\n        return searchState.typeRessources;\n    } else {\n        return null;\n    }\n})\n\nexport const ressourceSelector = createSelector(matiereSelector, (searchState: RessourceState) => {\n    if (searchState) {\n        return searchState.ressources;\n    } else {\n        return null;\n    }\n})\n\nexport const ressourceFileSelector = createSelector(matiereSelector, (searchState: RessourceState) => {\n    if (searchState) {\n        return searchState.fileRessourceSelected;\n    } else {\n        return null;\n    }\n})"],"sourceRoot":""}